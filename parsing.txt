- doit prendre en premier agrument un fichier de description de scene vec l'extention *.cub

- dans la map uniquement:
	- 0 espace vide
	- 1 mur
	- N, S, E, W qui represente la position de depart du joueur et son orientation
	
- la map doit etre fermer (entourer de mur)

- a part la description de la map, chaque type d'element peut etre separer par une ou plusieur ligne vide

- la desciption de la map sera toujous en dernier dans le fichier, le reste des element peut etre dans n'importe quel ordre

- sauf pour la map, les informations de chaque element peuvent etre separer par un ou plusieur espace

- pour chaque element, le premier caractere est l'identifiant (1 ou 2 caractere) suivie de toute les info specifique a l'element dans le bon ordre:
	- NO ./path_to_the_north_texture
	- SO ./path_to_the_south_texture
	- WE ./path_to_the_west_texture
	- EA ./path_to_the_east_texture
	- F 220,100,0
	- C 225,30,0
	- pour le sol (F) et le pafond (C) on a R, G, B (entre 0 et 255)

- si il y a un pb on met "Error\n" suivie du msg qu'on veut

	
NO ./path_to_the_north_texture
SO ./path_to_the_south_texture
WE ./path_to_the_west_texture
EA ./path_to_the_east_texture

F 220,100,0
C 225,30,0

	1111111111111111111111111
	1000000000110000000000001
	1011000001110000000000001
	1001000000000000000000001
111111111011000001110000000000001
100000000011000001110111111111111
11110111111111011100000010001
11110111111111011101010010001
11000000110101011100000010001
10000000000000001100000010001
10000000000000001101010010001
11000001110101011111011110N0111
11110111 1110101 101111010001
11111111 1111111 111111111111

solution refaire une map ou les bords sont des 2 au lieu de 1 et faire un flood fill 
pour voir si il n'y a pas d'espace ou de tab dans la map 


PLAN:

Voici une liste des étapes à suivre pour réaliser le projet Cub3D, après avoir fait le parsing:

1. Initialiser la fenêtre avec la minilibX
2. Configurer les gestionnaires d'événements pour:
   - Les touches du clavier (W, A, S, D pour le mouvement, flèches pour la rotation, ESC pour quitter)
   - La fermeture de la fenêtre (clic sur la croix rouge)

3. Implémenter l'algorithme de raycasting:
   - Initialiser la position et la direction du joueur selon la carte
   - Pour chaque colonne de l'écran, calculer un rayon
   - Déterminer les intersections du rayon avec les murs
   - Calculer la distance du mur perpendiculaire à la direction du regard
   - Déterminer la hauteur de la colonne à dessiner

4. Gérer l'affichage:
   - Dessiner le plafond avec la couleur spécifiée
   - Dessiner le sol avec la couleur spécifiée
   - Dessiner les murs avec les textures correspondantes selon l'orientation (N, S, E, W)

5. Implémenter les déplacements du joueur:
   - Avancer/reculer (W/S)
   - Strafing (A/D)
   - Rotation (flèches gauche/droite)

6. Gérer les collisions avec les murs (obligatoire pour la partie bonus, mais recommandé pour la partie principale)

7. Optimiser le rendu pour obtenir une performance fluide

8. Implémenter la gestion des erreurs et le nettoyage des ressources

9. Si vous souhaitez faire des bonus:
   - Ajouter la minimap
   - Implémenter la gestion des collisions si pas déjà fait
   - Ajouter des portes
   - Ajouter des animations
   - Implémenter la rotation avec la souris

10. Tester votre programme avec différentes cartes et configurations

11. Vérifier qu'il n'y a pas de fuites de mémoire

12. S'assurer que le programme respecte la norme de codage
